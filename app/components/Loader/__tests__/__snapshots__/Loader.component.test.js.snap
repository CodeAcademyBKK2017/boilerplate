// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`LoaderView LoaderView: Should return Overlay 1`] = `
<Modal
  animationOutType="fadeOut"
  animationType="none"
  hardwareAccelerated={false}
  onClose={[Function]}
  onRequestClose={[Function]}
  transparent={true}
  visible={true}
>
  <View
    accessibilityComponentType={undefined}
    accessibilityLabel={undefined}
    accessibilityTraits={undefined}
    accessible={true}
    collapsable={undefined}
    hitSlop={undefined}
    nativeID={undefined}
    onLayout={undefined}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "rgba(37, 8, 10, 0.78)",
        "flex": 1,
        "justifyContent": "center",
        "opacity": 0,
        "padding": 20,
      }
    }
    testID={undefined}
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      hitSlop={undefined}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Array [
          Object {
            "alignItems": "center",
            "backgroundColor": "white",
            "padding": 20,
          },
          undefined,
        ]
      }
      testID={undefined}
    >
      <ActivityIndicator
        animating={true}
        color="#999999"
        hidesWhenStopped={true}
        size="large"
      />
    </View>
  </View>
</Modal>
`;
