// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App App: renders correctly 1`] = `
<View
  style={
    Object {
      "alignItems": "center",
      "backgroundColor": "rgb(233,233,238)",
      "flex": 1,
      "justifyContent": "center",
    }
  }
>
  <View
    style={
      Object {
        "flexDirection": "column",
        "padding": 10,
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "flexDirection": "row",
          "justifyContent": "space-between",
          "paddingTop": 15,
          "width": "100%",
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        Note Title
      </Text>
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hasTVPreferredFocus={undefined}
        hitSlop={undefined}
        isTVSelectable={true}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "opacity": 1,
          }
        }
        testID={undefined}
        tvParallaxProperties={undefined}
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "backgroundColor": "lightgray",
            }
          }
        >
          EN
        </Text>
      </View>
    </View>
    <TextInput
      allowFontScaling={true}
      multiline={true}
      onChangeText={[Function]}
      style={
        Object {
          "backgroundColor": "#F5FCFF",
          "borderColor": "gray",
          "borderWidth": 1,
          "height": 50,
          "width": "100%",
        }
      }
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "flex": 4,
        "justifyContent": "center",
      }
    }
  >
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#333333",
          "fontStyle": "italic",
          "marginBottom": 5,
          "textAlign": "left",
        }
      }
    >
      Please type your note below.
    </Text>
    <TextInput
      allowFontScaling={true}
      multiline={true}
      onChangeText={[Function]}
      style={
        Object {
          "backgroundColor": "#F5FCFF",
          "borderColor": "gray",
          "borderRadius": 5,
          "borderWidth": 1,
          "flexGrow": 1,
          "width": 350,
        }
      }
      underlineColorAndroid="rgba(0,0,0,0)"
      value=""
    />
  </View>
  <View
    style={
      Object {
        "flex": 1,
        "flexDirection": "row",
        "justifyContent": "space-between",
        "padding": 10,
        "width": "100%",
      }
    }
  >
    <View
      accessibilityComponentType={undefined}
      accessibilityLabel={undefined}
      accessibilityTraits={undefined}
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "color": "black",
            "fontWeight": "bold",
            "textAlign": "left",
          }
        }
      >
        Save
      </Text>
    </View>
    <Text
      accessible={true}
      allowFontScaling={true}
      ellipsizeMode="tail"
      style={
        Object {
          "color": "#333333",
          "textAlign": "right",
        }
      }
    >
      0
       chacters
    </Text>
  </View>
  <View
    style={
      Object {
        "flex": 5,
        "height": "10%",
        "padding": 10,
        "width": "100%",
      }
    }
  >
    <View
      style={undefined}
    >
      <Modal
        animationOutType="fadeOut"
        animationType="none"
        hardwareAccelerated={false}
        onClose={[Function]}
        onRequestClose={[Function]}
        transparent={true}
        visible={false}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(37, 8, 10, 0.78)",
              "flex": 1,
              "justifyContent": "center",
              "opacity": 0,
              "padding": 20,
            }
          }
          testID={undefined}
        >
          <View
            accessibilityComponentType={undefined}
            accessibilityLabel={undefined}
            accessibilityTraits={undefined}
            accessible={true}
            hitSlop={undefined}
            nativeID={undefined}
            onLayout={undefined}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Array [
                Object {
                  "alignItems": "center",
                  "backgroundColor": "white",
                  "padding": 20,
                },
                Object {
                  "backgroundColor": "#eee",
                },
              ]
            }
            testID={undefined}
          >
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
            <Text
              accessible={true}
              allowFontScaling={true}
              ellipsizeMode="tail"
            />
          </View>
        </View>
      </Modal>
    </View>
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
  </View>
</View>
`;
