// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders correctly 1`] = `
<View
  style={
    Object {
      "backgroundColor": "lightgray",
      "flex": 1,
      "paddingTop": 10,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "fontWeight": "bold",
          }
        }
      >
        Note Title
      </Text>
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "gray",
            "borderWidth": 1,
            "marginTop": 20,
            "minWidth": "100%",
            "padding": 10,
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View
      style={
        Object {
          "flex": 1,
          "marginTop": 20,
        }
      }
    >
      <Text
        accessible={true}
        allowFontScaling={true}
        ellipsizeMode="tail"
        style={
          Object {
            "fontStyle": "italic",
          }
        }
      >
        Please type your note below 
        <Text
          accessible={true}
          allowFontScaling={false}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "green",
                "fontSize": 30,
              },
              undefined,
              Object {
                "fontFamily": "Material Design Icons",
                "fontStyle": "normal",
                "fontWeight": "normal",
              },
            ]
          }
        >
          
        </Text>
      </Text>
      <TextInput
        allowFontScaling={true}
        multiline={true}
        onChangeText={[Function]}
        style={
          Object {
            "backgroundColor": "white",
            "borderColor": "gray",
            "borderWidth": 1,
            "flex": 1,
            "marginTop": 20,
            "padding": 10,
            "textAlignVertical": "top",
          }
        }
        underlineColorAndroid="transparent"
        value=""
      />
    </View>
    <View>
      <View
        style={
          Object {
            "flexDirection": "row",
            "justifyContent": "space-between",
            "marginBottom": 20,
            "marginTop": 20,
          }
        }
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          collapsable={undefined}
          hasTVPreferredFocus={undefined}
          hitSlop={undefined}
          isTVSelectable={true}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
          testID={undefined}
          tvParallaxProperties={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontWeight": "bold",
              }
            }
          >
            Save
          </Text>
        </View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "textAlign": "right",
            }
          }
        >
          0
           
          <Text
            accessible={true}
            allowFontScaling={false}
            ellipsizeMode="tail"
            style={
              Array [
                Object {
                  "color": "#900",
                  "fontSize": 30,
                },
                undefined,
                Object {
                  "fontFamily": "FontAwesome",
                  "fontStyle": "normal",
                  "fontWeight": "normal",
                },
              ]
            }
          >
            
          </Text>
        </Text>
      </View>
      <View>
        <Text
          accessible={true}
          allowFontScaling={true}
          ellipsizeMode="tail"
          style={
            Object {
              "fontWeight": "900",
              "paddingBottom": 10,
              "paddingTop": 10,
            }
          }
        >
          Notes: 
        </Text>
      </View>
    </View>
  </View>
  <View
    style={
      Object {
        "maxHeight": 200,
      }
    }
  >
    <RCTScrollView
      data={Array []}
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      numColumns={1}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View />
    </RCTScrollView>
    <Modal
      animationOutType="fadeOut"
      animationType="none"
      hardwareAccelerated={false}
      onClose={[Function]}
      onRequestClose={[Function]}
      transparent={true}
      visible={false}
    >
      <View
        accessibilityComponentType={undefined}
        accessibilityLabel={undefined}
        accessibilityTraits={undefined}
        accessible={true}
        collapsable={undefined}
        hitSlop={undefined}
        nativeID={undefined}
        onLayout={undefined}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "rgba(37, 8, 10, 0.78)",
            "flex": 1,
            "justifyContent": "center",
            "opacity": 0,
            "padding": 20,
          }
        }
        testID={undefined}
      >
        <View
          accessibilityComponentType={undefined}
          accessibilityLabel={undefined}
          accessibilityTraits={undefined}
          accessible={true}
          hitSlop={undefined}
          nativeID={undefined}
          onLayout={undefined}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Array [
              Object {
                "alignItems": "center",
                "backgroundColor": "white",
                "padding": 20,
              },
              undefined,
            ]
          }
          testID={undefined}
        >
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={
              Object {
                "fontWeight": "900",
                "paddingBottom": 10,
                "paddingTop": 10,
              }
            }
          >
            
          </Text>
          <Text
            accessible={true}
            allowFontScaling={true}
            ellipsizeMode="tail"
            style={undefined}
          >
            
          </Text>
        </View>
      </View>
    </Modal>
  </View>
  <View
    style={
      Object {
        "backgroundColor": "white",
      }
    }
  >
    <View
      accessibilityComponentType="button"
      accessibilityLabel={undefined}
      accessibilityTraits={
        Array [
          "button",
        ]
      }
      accessible={true}
      collapsable={undefined}
      hasTVPreferredFocus={undefined}
      hitSlop={undefined}
      isTVSelectable={true}
      nativeID={undefined}
      onLayout={undefined}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      style={
        Object {
          "opacity": 1,
        }
      }
      testID={undefined}
      tvParallaxProperties={undefined}
    >
      <View
        style={
          Array [
            Object {},
          ]
        }
      >
        <Text
          accessible={true}
          allowFontScaling={true}
          disabled={undefined}
          ellipsizeMode="tail"
          style={
            Array [
              Object {
                "color": "#007AFF",
                "fontSize": 18,
                "padding": 8,
                "textAlign": "center",
              },
              Object {
                "color": "#841584",
              },
            ]
          }
        >
          About
        </Text>
      </View>
    </View>
  </View>
</View>
`;
